{"version":3,"sources":["api/backapi.js","components/post.js","components/home.js","components/detail.js","components/createpost.js","components/login.js","components/notfound.js","components/update.js","App.js","serviceWorker.js","index.js"],"names":["axios","create","baseURL","headers","Post","state","color","localStorage","getItem","this","props","history","replace","setState","rand","Math","random","parseInt","user","className","key","id","style","textAlign","minWidth","backgroundColor","fontSize","fontWeight","title","category","marginBottom","userId","username","href","Component","Home","notes","serachBy","searchitem","query","handleform","event","console","log","preventDefault","handleLogout","clear","handleSelect","target","value","handleSearch","api","get","then","res","data","catch","err","notesarr","searcharr","border","padding","borderRadius","onSubmit","onChange","type","name","placeholder","onClick","cursor","length","Object","keys","map","userName","_id","Detail","desc","cod","handleDelete","url","delete","status","match","params","description","createdAt","uod","updatedAt","class","float","paddingLeft","margin","React","Createpost","handleChange","handleSubmit","post","JSON","stringify","alert","action","required","Login","email","password","http","setItem","e","Notfound","Update","post_id","put","App","path","exact","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.90835243.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport default axios.create({\n    baseURL:'https://notes-appnode.herokuapp.com',\n    headers: {'Content-Type':'application/json'}\n})","import React,{Component} from 'react';\n\nclass Post extends Component{\n\n    state={\n        color:[]\n    }\n    \n    componentDidMount(){\n        if(!localStorage.getItem('userid')){\n            this.props.history.replace('/login')\n        }\n        this.setState({\n            color:['#EEDD82','#CCF0C8','#FFCCBC','#FFF0D5','#FFBCDE','#CCE697','#B4ECEA','white','#E0FCF4', '#B5FFD5']\n        })\n    }\n    render(){\n        let rand =  1 + (Math.random() * (10-1))\n        // console.log(typeof(Math.ceil(rand)))\n        rand = parseInt(rand)\n        let user = localStorage.getItem('userid');\n        // console.log(localStorage.getItem('userid'),this.props.userId);\n        return(\n         \n            <div className=\"post p-4 m-4\" key={this.props.id} style={{textAlign:'center',minWidth:'280px',backgroundColor:'white'}}>\n                <p></p>\n                <h1 className=\"\" style={{fontSize:'28px',fontWeight:'800'}}>{this.props.title}</h1>\n                <p className=\"\" style={{fontSize:'18px'}}>({this.props.category})</p>\n                <p className=\"text-danger\" style={{fontSize:'12px' ,marginBottom:'0'}}>By</p>\n                \n                {(this.props.userId === user) ? <p className=\"text-danger\" style={{fontSize:'12px',fontWeight:'900',color:'green'}}>- You -</p> : <p className=\"text-danger\" style={{fontSize:'12px',fontWeight:'900',color:'green'}}>- {this.props.username} -</p> }\n                \n                <a className=\"btn btn-back\" href={'detail/'+this.props.id}>see more</a>\n            </div>\n        )\n    }\n}\n\nexport default Post;","import React,{Component} from 'react';\nimport api from '../api/backapi';\nimport Post from './post';\n\nclass Home extends Component{\n\n    state={\n        notes:[],\n        serachBy:'',\n        searchitem:[],\n        query:''\n    }\n    \n    componentDidMount(){\n        if(!localStorage.getItem('userid')){\n            this.props.history.replace('/login')\n        }\n        \n        api.get('/notes')\n        .then(res=>{\n            // console.log(res.data.notes) \n            this.setState({\n                notes:res.data.notes\n            })\n        })\n        .catch(err=>{\n            console.log(err)\n        })\n    }\n\n    handleform=(event)=>{\n        console.log(event)\n        event.preventDefault();\n    }\n    handleLogout=(event)=>{\n        localStorage.clear()\n        this.props.history.replace('/login')\n    }\n\n    handleSelect=(event)=>{\n        // console.log(event.target.value)\n        this.setState({\n            serachBy:event.target.value,\n            searchitem:[]\n\n        })\n        // notes/byTitle/queryparam\n\n        // notes/byCategory/queryparam\n    }\n    handleSearch=(event)=>{\n        // console.log(event.target.value)\n        let query = event.target.value;\n        this.setState({\n            query:query\n        })\n        if(query != ''){\n            if(this.state.serachBy === 'category'){\n                // notes/byCategory/queryparam\n                api.get('/notes/byCategory/'+query)\n                .then(res=>{\n                    // console.log(res)\n                    this.setState({\n                        searchitem:res.data\n                    })\n                })\n                .catch(err=>{\n                    console.log(err)\n                  \n                })\n          }\n          else{\n                // notes/byTitle/queryparam\n                this.setState({\n                    serachBy:'title'\n                })\n                api.get('/notes/byTitle/'+query)\n                .then(res=>{\n                    // console.log(res)\n                    this.setState({\n                        searchitem:res.data\n                    })\n                })\n                .catch(err=>{\n                    console.log(err)\n                    \n                })\n          }\n        }\n        else{\n            this.setState({\n                searchitem:[],\n                query:''\n            })\n        }\n        \n    }\n\n    render(){\n        const notesarr= this.state.notes;\n        const searcharr= this.state.searchitem;\n        // console.log('search length',this.state.serachBy.length)\n        return(\n            <div>\n                <div className=\"header-content\">\n                    <div className=\" d-flex flex-row justify-content-around p-2\">\n                        <a href=\"/create\"  className=\"m-2\" style={{fontSize:'15px',color:'white',fontWeight:'800', border:'1px solid white', padding:'5px', borderRadius:'5px'}}>Create</a>\n                        <div className=\"m-2 search-form\">\n                        \n                            <form onSubmit={this.handleform}>\n                            <select onChange={this.handleSelect} style={{fontSize:'15px',color:'white',fontWeight:'800', border:'1px solid white', padding:'5px', borderRadius:'5px'}}>\n                                <option value=\"title\" style={{color:'black'}}>Title</option>\n                                <option value=\"category\" style={{color:'black'}}>Category</option>   \n                            </select>\n                                <input type=\"text\" name=\"search\" placeholder=\"Search...\" onChange={this.handleSearch}/>\n                            </form>\n                        </div> \n                        <a onClick={this.handleLogout} className=\"m-2\" style={{fontSize:'15px',color:'white',fontWeight:'800', border:'1px solid white', padding:'5px', borderRadius:'5px',cursor:'pointer'}}>Logout</a>\n                     </div>   \n                </div>\n                {(this.state.query.length === 0 && searcharr.length === 0 )? <div className=\"post-content\">\n                    <div className=\"d-inline-flex align-content-between flex-wrap\">\n                    {Object.keys(notesarr).map(key=>\n                            \n                          <Post userId={notesarr[key].userId} username={notesarr[key].userName} id={notesarr[key]._id} title={notesarr[key].title} category={notesarr[key].category} key={notesarr[key]._id} />   \n                    )}\n                    </div>\n                </div> : <div className=\"post-content\">\n                    <div className=\"d-inline-flex align-content-between flex-wrap\">\n                    {Object.keys(searcharr).map(key=>\n                            \n                          <Post userId={searcharr[key].userId} username={searcharr[key].userName} id={searcharr[key]._id} title={searcharr[key].title} category={searcharr[key].category} key={searcharr[key]._id} />   \n                    )}\n                    </div>\n                </div>}\n                \n\n\n            </div>\n        )\n    }\n}\nexport default Home;","import React from 'react';\nimport api from '../api/backapi';\n\nclass Detail extends React.Component{\n    state={\n        username:'',\n        title:'',\n        category:'',\n        desc:'',\n        cod:''\n    }\n\n    componentDidMount(){\n        if(!localStorage.getItem('userid')){\n            this.props.history.replace('/')\n        }\n\n        let url = '/notes/'+this.props.match.params.id;\n        api.get(url)\n        .then(res=>{\n            // console.log('myid',res.data)\n            this.setState({\n                _id:res.data._id,\n                username:res.data.userName,\n                title:res.data.title,\n                category:res.data.category,\n                desc:res.data.description,\n                cod:res.data.createdAt,\n                uod:res.data.updatedAt,\n                userId:res.data.userId\n            })\n        })\n        .catch(err=>{\n            console.log(err)\n        })\n    } \n    \n    handleDelete=(event)=>{\n        let url='/notes/'+this.state._id;\n            api.delete(url)\n            .then(res=>{\n                console.log(res)\n                if(res.status === 200){\n                    this.props.history.replace('/')\n                    // event.preventDefault();\n                }\n                else{\n                    this.props.history.replace('*')\n                }\n                \n            })\n            .catch(err=>{\n                console.log(err)\n                this.props.history.replace('/*')\n            })\n    }\n    \n    render(){\n        \n        return (\n            <div>\n                <a href=\"/\"><div className=\"btn btn-warning back-btn px-4 mt-2 ml-2\">&lt;&lt; Home</div></a>\n                {(this.state.title != '')?<div className=\"post-detail\">\n                {(this.state.userId === localStorage.getItem('userid'))? <div>\n                    <a onClick={this.handleDelete} style={{cursor:'pointer'}}><i class=\"fa fa-minus-circle\" style={{float:'left',color:'red',fontSize:'20px'}}></i></a>\n                    <a href={'/update/'+this.state._id}><i class=\"fa fa-edit\" style={{float:'right',color:'red',fontSize:'20px', paddingLeft:'10px'}}></i></a>\n                    </div> : <div></div> }\n                   \n                    <h2>{this.state.title}</h2>\n                    <hr className=\"dash\" />\n                    <b>- Category -</b>\n                    <h3 style={{fontSize:'15px',textAlign:'center'}}> {this.state.category}</h3>\n                    <h3 style={{fontSize:'15px',fontWeight:'400',textAlign:'center',fontWeight:'600'}}>- Description -</h3>\n                    <p style={{fontSize:'16px',color:'black', textAlign:'center'}}>{this.state.desc}</p>\n                    {(this.state.userId === localStorage.getItem('userid'))? <h4 style={{fontSize:'12px',color:'green',fontWeight:'900'}}>- You -</h4>: <h4 style={{fontSize:'12px',color:'green',fontWeight:'900'}}>- {this.state.username} -</h4>}\n                    <div style={{fontSize:'11px',fontWeight:'800', color:'red'}}>\n                        <span style={{float:'left'}} >CreatedAt: <label> {this.state.cod}</label></span>\n                        <span style={{float:'right'}}>UpdatedAt: <label>{this.state.uod}</label></span>\n                    </div>\n                </div>:<h1 style={{fontSize:'30px', color:'white', margin:'12% 40%'}}>No Record Found</h1>}\n                \n            </div>\n        )\n    }\n   \n}\n\nexport default Detail;","import React,{Component} from 'react';\nimport api from '../api/backapi';\n\nclass Createpost extends Component{\n    state={\n        title:'',\n        category:'',\n        description:'',\n    }\n    componentDidMount(){\n        if(!localStorage.getItem('userid')){\n            this.props.history.replace('/login')\n        }\n    }\n   \n    handleChange=(event)=>{\n        if(event.target.name === 'title'){\n            this.setState({\n                title:event.target.value\n            })\n        }\n       else if (event.target.name === 'category'){\n        this.setState({\n            category:event.target.value\n        })\n        }\n        else if(event.target.name === 'description'){\n            this.setState({\n                description:event.target.value\n            })\n        }\n        \n    }\n    handleSubmit=(event)=>{\n        console.log(this.state)\n        let data ={\n            userId:localStorage.getItem('userid'),\n            userName:localStorage.getItem('username'),\n            title:this.state.title,\n            category:this.state.category,\n            description:this.state.description\n        }\n        api.post('/notes/create',JSON.stringify(data))\n        .then(res=>{\n            console.log(res)\n            if(res.status === 200){\n                this.props.history.replace('/')\n            }\n        })\n        .catch(err=>{\n            console.log(err)\n            alert('error while creating.')\n        })\n\n        event.preventDefault();\n\n    }\n\n    render(){\n        return(\n            <div>\n                <a href=\"/\"><div className=\"btn btn-warning back-btn px-4 mt-2 ml-2\">&lt;&lt; Home</div></a>\n            <div className=\"form form-group create-form\">\n                <h3>Add New Post</h3>\n                <hr />\n                <form onSubmit={this.handleSubmit} action=\"/\">\n                    <input type=\"text\" name=\"title\" placeholder=\"Post title....\"  required  onChange={this.handleChange}/>\n                    <input type=\"text\" name=\"category\" placeholder=\"Category....\" required  onChange={this.handleChange}/>\n                    <input type=\"text\" name=\"description\" placeholder=\"description....\" required onChange={this.handleChange}/>\n                    <button className=\"btn btn-success\">Add New</button>\n                </form>\n            </div>\n        </div>\n        )\n    }\n}\n\nexport default Createpost;","import React,{Component} from 'react';\nimport http from '../api/backapi';\n\n\n\nclass Login extends Component{\n    componentDidMount(){\n        if(localStorage.getItem('userid')){\n            this.props.history.replace('/')\n        }\n    }\n\n    state={\n        email:'',\n        password:'',\n        name:'',\n        id:''\n    }\n    handleChange=(event)=>{\n            if(event.target.name==='email'){\n                this.setState({\n                    email:event.target.value\n                })\n            }\n            else if(event.target.name==='password'){\n                this.setState({\n                    password:event.target.value\n                })\n            }\n    }\n    handleSubmit=(event)=>{\n        \n        let data={\n            'email':this.state.email,\n            'password':this.state.password\n        }\n        // console.log(\"here we go\",data)\n        http.post('/login',JSON.stringify(data))\n        .then(res=>{\n            console.log(res)\n            if(res.status === 200){\n                this.setState({\n                    id:res.data.id,\n                    name:res.data.name\n                })\n                localStorage.setItem('userid',res.data.id)\n                localStorage.setItem('username',res.data.name)\n                this.props.history.replace(\"/\")    \n            }  \n            \n        })\n        .catch(e=>{\n            console.log(e);\n            alert(\"invalid password or email\");\n          \n        })\n        event.preventDefault();\n       \n    }\n\n\n    render(){\n        return(\n            <div className=\"login-page\">\n                <div className=\"form\">\n                    <form className=\"login-form\" onSubmit={this.handleSubmit}>\n                    <input type=\"email\" name=\"email\" placeholder=\"useremail\" onChange={this.handleChange} required/>\n                    <input type=\"password\" name=\"password\" placeholder=\"password\" onChange={this.handleChange} required/>\n                    <button style={{backgroundColor:'drakcayon',color:'white'}}>login</button>\n                    </form>\n                </div>\n            </div>\n            \n        )\n    }\n}\n\nexport default Login;","import React from 'react';\n\nconst Notfound=()=>{\n    return(\n        <div id=\"notfound\">\n            <div class=\"notfound\">\n            <div class=\"notfound-404\">\n            <h3>Oops! Page not found</h3>\n            <h1><span>4</span><span>0</span><span>4</span></h1>\n            </div>\n            <h2>we are sorry, but the page you requested was not found</h2>\n            </div>\n        </div>\n    )\n}\n\nexport default Notfound;","import React from 'react';\nimport api from '../api/backapi';\n\nclass Update extends React.Component{\n    state={\n            post_id:'',\n            title:'',\n            category:'',\n            description:''\n    }\n    componentDidMount(){\n        const id = this.props.match.params.id\n        api.get('/notes/'+id)\n        .then(res=>{\n            console.log(res.data)\n            this.setState({\n                post_id:res.data._id,\n                title:res.data.title,\n                category:res.data.category,\n                description:res.data.description\n            })\n        })\n        .catch(err=>{\n            console.log(err)\n        })\n    }\n    // params = note_id, body(title,category,description)\n    // /notes/id\n\n    handleChange=(event)=>{\n        if(event.target.name === 'title'){\n            this.setState({\n                title:event.target.value\n            })\n        }\n        else if(event.target.name === 'category'){\n            this.setState({\n                category:event.target.value\n            })\n\n        }\n        else if(event.target.name === 'description'){\n            this.setState({\n                description:event.target.value\n            })\n        }\n    }\n\n    handleSubmit=(event)=>{\n            console.log('state',this.state)\n            let url = '/notes/'+this.state.post_id;\n            let data = {\n                title:this.state.title,\n                category:this.state.category,\n                description:this.state.description\n            }\n            api.put(url,JSON.stringify(data))\n            .then(res=>{\n                console.log(res)\n                if(res.status === 200){\n                    this.props.history.replace('/');\n                }\n            })\n            .catch(err=>{\n                console.log(err)\n                alert(\"Note Not updated.\")\n               \n            })\n            event.preventDefault();\n    }\n    render(){\n        return(\n            <div>\n                <a href=\"/\"><div className=\"btn btn-warning back-btn px-4 mt-2 ml-2\">&lt;&lt; Home</div></a>\n                <div className=\"form form-group create-form\">\n                    <h3>Update Post</h3>\n                    <hr />\n                    <form onSubmit={this.handleSubmit} action=\"/\">\n                        <input type=\"text\" name=\"title\" placeholder=\"Post title....\"  value={this.state.title} required  onChange={this.handleChange}/>\n                        <input type=\"text\" name=\"category\" placeholder=\"Category....\" value={this.state.category} required  onChange={this.handleChange}/>\n                        <input type=\"text\" name=\"description\" placeholder=\"description....\" value={this.state.description} required onChange={this.handleChange}/>\n                        <button className=\"btn\" style={{backgroundColor:'drakcayon',color:'white'}}>Add New</button>\n                    </form>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Update;","import React from 'react';\nimport './App.css';\nimport { Switch, Route, BrowserRouter } from 'react-router-dom';\nimport Home from './components/home';\nimport Detail from './components/detail';\nimport Createpost from './components/createpost';\nimport Login from './components/login';\nimport Notfound from './components/notfound';\nimport Update from './components/update';\n\n\nfunction App() {\n  return (\n    <div>\n      <BrowserRouter>\n      <Switch>\n          <Route path='/' exact component={Home} />\n          <Route path='/create' exact component={Createpost} />\n          <Route path='/login' exact component={Login} />\n          <Route path='/detail/:id' exact component={Detail} />\n          <Route path='/update/:id' exact component={Update} />\n          <Route path='*' component={Notfound}/>\n      </Switch>\n    </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}